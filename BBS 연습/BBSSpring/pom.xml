<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>kr.or.bbs</groupId>
  <artifactId>BBSSpring</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>BBSSpring Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <properties>
  	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<!-- 스프링 라이브러리 버전 -->
	<spring.version> 4.3.5.RELEASE</spring.version>
	<!-- jackson 라이브러리 버전 -->
  	<jackson2.version>2.8.6</jackson2.version>
  </properties>
	
  <dependencies>
  
  	<!-- servlet 디펜던시(라이브러리) 추가 -->
  	<dependency>
	  <groupId>javax.servlet</groupId>
	  <artifactId>javax.servlet-api</artifactId>
	  <version>3.1.0</version>
	  <scope>provided</scope>
	  <!-- provided는 컴파일 시에만 사용되고 배포시에는 사용되지 않음을 의미한다. -->
	  <!-- 이전 다이나믹 웹 프로젝트에서 생성시에는 톰캣 was를 지정해줬기때문에 서블릿,jsp,jstl이 컴파일시에도 지원됐지만 -->
	  <!-- maven project에서는 톰캣 was를 따로 지정해주는 작업을하지 않았다. 그렇기 때문에 라이브러리를 추가해줘야 한다. -->
	  <!-- 하지만 이 라이브러리가 컴파일시에만 필요하고 런타임, 배포시에는 필요하지 않기 때문에 (왜냐하면 런타임시에 톰캣 was가 동작하기 때문에) -->
	  <!-- provided라는 scope으로 이를(컴파일시에만 필요한 라이브러리) 표시해주는 것이다. -->
	</dependency>
  
  	<!-- jsp 라이브러리 추가 -->
  	<dependency>
	  <groupId>javax.servlet.jsp</groupId>
	  <artifactId>javax.servlet.jsp-api</artifactId>
	  <version>2.3.1</version>
	  <scope>provided</scope>
	</dependency>
	
	<!-- jstl 라이브러리 추가 -->
	<dependency>
	  <groupId>jstl</groupId>
	  <artifactId>jstl</artifactId>
	  <version>1.2</version>
	</dependency>
	
	<!-- Spring-context, webmvc 추가 -->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-context</artifactId>
	  <version>${spring.version}</version>
	</dependency>
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-webmvc</artifactId>
	  <version>${spring.version}</version>
	</dependency>
	
	<!-- spring jdbc 라이브러리 추가 -->
	<!-- jdbc이용시 반복적인 코드가 등장한다. (연결, 스테이트먼트, 리저트셋,예외 처리 ,연결 닫기 작업등) -->
	<!-- 이런 반복적인 코드 작업을 spring jdbc가 대신해준다. -->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-jdbc</artifactId>
	  <version>${spring.version}</version>
	</dependency>
	
	<!-- 트랜잭션 사용하기 위한것   -->
	<dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-tx</artifactId>
	  <version>${spring.version}</version>
	</dependency>
	
	<!-- mysql jdbc 드라이버 라이브러리  -->
	<!-- mysql 버전 8.x.x일 경우  -->
	<dependency>
	  <groupId>mysql</groupId>
	  <artifactId>mysql-connector-java</artifactId>
	  <version>8.0.28</version>
	</dependency>
	
	<!-- basic data source 라이브러리 추가-->
	<!-- DataSource는 커넥션 풀을 관리하는 객체이다. -->
	<!-- ConnectionPool은 DBMS와 커넥션을 미리 많이 맺어둔 객체이다. -->
	<!-- DataSource를 이용해 커넥션을 얻어오고 반납하는 등의 작업을 수행한다. -->
	<!-- 여기서 사용하는 DataSource는 Apache에서 제공하는 commons-dbcp2이다. -->
	<dependency>
	  <groupId>org.apache.commons</groupId>
	  <artifactId>commons-dbcp2</artifactId>
	  <version>2.1.1</version>
	</dependency>
	
	<!-- Jackson Module 라이브러리 추가-->
	<!-- Jackson은 자바용 json 라이브러리 이다.  -->
	<!-- Java Object를 JSON으로 변환하거나 JSON을 Java Object로 변환하는데 사용할 수 있는 라이브러리이다. -->
	<dependency>
	  <groupId>com.fasterxml.jackson.core</groupId>
	  <artifactId>jackson-databind</artifactId>
	  <version>${jackson2.version}</version>
	</dependency>
	
	<dependency>
	  <groupId>com.fasterxml.jackson.datatype</groupId>
	  <artifactId>jackson-datatype-jdk8</artifactId>
	  <version>${jackson2.version}</version>
	</dependency>
	
  
  	<!-- 자동으로 junit 라이브러리가 추가되어 있다. -->
  	<!-- junit은 테스트를 위한 라이브러리 이다. -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <finalName>BBSSpring</finalName>
    
    <!-- jdk 1.8버전 사용하기 위해 plugin을 추가한다. -->
    <plugins>
    	<plugin>
    		<groupId>org.apache.maven.plugins</groupId>
    		<artifactId>maven-compiler-plugin</artifactId>
    		<version>3.6.1</version>
    		<configuration>
    			<source>1.8</source>
    			<source>1.8</source>
    		</configuration>
    	</plugin>
    </plugins>
    
  </build>
</project>
